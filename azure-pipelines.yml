# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'


steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'repeat-committers'
    scannerMode: 'MSBuild'
    projectKey: 'Repeat-Committers_Whats-That-Song'
    projectName: 'Whats That Song'
    extraProperties: |
      g/wwwroot/**
      sonar.branch.name=$(Build.SourceBranchName)
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx sonar.exclusions=**/obj/**,**/*.dll, **/WhatsThatSon
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.xml
- script: dotnet build ./WhatsThatSong/*.sln --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: './WhatsThatTest'
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/MyCoverage/'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: publish code coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/MyCoverage/coverage.cobertura.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
